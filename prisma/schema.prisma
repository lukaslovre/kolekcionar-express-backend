// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

// UPUTE:
// Every time you change the database schema in your schema.prisma file, you need to follow these steps:
// 
// 1. Create a new migration: This will generate a new migration file based on the changes you made to the schema. Run the following command:
//     `npx prisma migrate dev --name <migration_name>`
// 
// 2. Generate the Prisma Client: This will update the Prisma Client to reflect the changes in your schema. Run the following command:
//     `npx prisma generate`

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = "file:../database.db"
}

model Kategorije {
  id       String  @id @default(uuid())
  nazivId  String
  parentId String?
  drzavaId String?
  isDead   Boolean @default(false)
  opis     String?
  count    Int     @default(0)
  items    Item[]
  // Does SQLite automatically create an index for the primary key? A: Yes

  @@index([parentId], name: "parentId")
}

model Item {
  id               Int        @id @default(autoincrement()) // Testiram autoincrement radi lak≈°eg referenciranja na proizvod
  cijena           Float
  limit            Int        @default(1)
  nazivId          String
  kategorijaId     String
  kategorija       Kategorije @relation(fields: [kategorijaId], references: [id])
  // kategorijaPut    Int[]
  opis             String?
  // sifra            Int       @default(autoincrement())
  groupId          String?
  group            Group?     @relation(fields: [groupId], references: [id])
  tags             Tag[]
  images           Image[]
  vrijemeDodavanja DateTime   @default(now())
  tip              String     @default("ostalo") // kovanica, novcanica, razglednica, kamen, ostalo (SQLITE nema ENUM)
  countryId        String?
  country          Country?   @relation(fields: [countryId], references: [id])
  nominala         Float?
  // valuta           String?
  godina           Int?
  // kralj            String?
  mintage          Int?
  // materijal        String?
  promjer          Float? // ako samo jedno
  masa             Float?
  // kvaliteta        String?
  // pick             String?
  // serija           String?
  // naselje          String?
  // vrstaKamena      String?
  visina           Float?
  sirina           Float?
  duljina          Float?

  @@index([kategorijaId], name: "kategorijaId")
}

model Tag {
  id               String  @id @default(uuid())
  naziv            String
  group            String
  displayOnCard    Boolean @default(true)
  displayOnDetails Boolean @default(true)
  description      String?
  items            Item[] // Many-to-Many relation
}

model Image {
  id     String @id @default(uuid())
  url    String
  itemId Int // Foreign key
  item   Item   @relation(fields: [itemId], references: [id]) // One-to-Many relation
}

model Group {
  id      String  @id @default(uuid())
  name    String
  purpose String?
  items   Item[]
}

model Country {
  id    String @id @default(uuid())
  name  String
  code  String
  items Item[]
}

// enum Tip {
//   kovanica
//   novcanica
//   razglednica
//   kamen
//   ostalo
// }
